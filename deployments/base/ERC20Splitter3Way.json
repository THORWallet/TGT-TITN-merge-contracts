{
  "address": "0x76a3B8FeA6F6C7D7af5B47885563955F3ACd9BC2",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Distributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ETHWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[3]",
          "name": "recipients",
          "type": "address[3]"
        },
        {
          "indexed": false,
          "internalType": "uint256[3]",
          "name": "percentages",
          "type": "uint256[3]"
        }
      ],
      "name": "RecipientsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "percentages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "recipients",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[3]",
          "name": "_recipients",
          "type": "address[3]"
        },
        {
          "internalType": "uint256[3]",
          "name": "_percentages",
          "type": "uint256[3]"
        }
      ],
      "name": "setRecipients",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xd85ec16b5434872d240c82a0e5ec427e84f59321164b99b898c78f8e746ed486",
  "receipt": {
    "to": null,
    "from": "0xE69Bc665F54d49279D0d5279220440Ea23096aba",
    "contractAddress": "0x76a3B8FeA6F6C7D7af5B47885563955F3ACd9BC2",
    "transactionIndex": 107,
    "gasUsed": "776605",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000840000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000001000000000000000000000000000000000000020000000000000000000800000000000000000000000000004000400000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x6edc352ca31008a619534b06b5dae79bd85e38a275ed552a3343590501c0e7f9",
    "transactionHash": "0xd85ec16b5434872d240c82a0e5ec427e84f59321164b99b898c78f8e746ed486",
    "logs": [
      {
        "transactionIndex": 107,
        "blockNumber": 32937171,
        "transactionHash": "0xd85ec16b5434872d240c82a0e5ec427e84f59321164b99b898c78f8e746ed486",
        "address": "0x76a3B8FeA6F6C7D7af5B47885563955F3ACd9BC2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000e69bc665f54d49279d0d5279220440ea23096aba"
        ],
        "data": "0x",
        "logIndex": 320,
        "blockHash": "0x6edc352ca31008a619534b06b5dae79bd85e38a275ed552a3343590501c0e7f9"
      }
    ],
    "blockNumber": 32937171,
    "cumulativeGasUsed": "43128503",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "cd2101b330754f14fa5c0f4f8a455814",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[3]\",\"name\":\"recipients\",\"type\":\"address[3]\"},{\"indexed\":false,\"internalType\":\"uint256[3]\",\"name\":\"percentages\",\"type\":\"uint256[3]\"}],\"name\":\"RecipientsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"percentages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recipients\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[3]\",\"name\":\"_recipients\",\"type\":\"address[3]\"},{\"internalType\":\"uint256[3]\",\"name\":\"_percentages\",\"type\":\"uint256[3]\"}],\"name\":\"setRecipients\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Splitter3Way.sol\":\"ERC20Splitter3Way\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/ERC20Splitter3Way.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20Splitter3Way is Ownable {\\n    address[3] public recipients;\\n    uint256[3] public percentages;\\n    IERC20 public token;\\n\\n    event RecipientsUpdated(address[3] recipients, uint256[3] percentages);\\n    event TokenUpdated(address token);\\n    event Distributed(uint256 amount);\\n    event TokensWithdrawn(address token, uint256 amount);\\n    event ETHWithdrawn(uint256 amount);\\n\\n    constructor() Ownable(msg.sender) {}\\n\\n    function setRecipients(address[3] memory _recipients, uint256[3] memory _percentages) external onlyOwner {\\n        require(_recipients[0] != address(0), \\\"At least one recipient required\\\");\\n        uint256 totalPercent = _percentages[0] + _percentages[1] + _percentages[2];\\n        require(totalPercent == 100, \\\"Percentages must sum to 100\\\");\\n\\n        recipients = _recipients;\\n        percentages = _percentages;\\n        emit RecipientsUpdated(_recipients, _percentages);\\n    }\\n\\n    function setToken(address _token) external onlyOwner {\\n        require(_token != address(0), \\\"Invalid token address\\\");\\n        token = IERC20(_token);\\n        emit TokenUpdated(_token);\\n    }\\n\\n    function distribute() external {\\n        require(address(token) != address(0), \\\"Token not set\\\");\\n        uint256 balance = token.balanceOf(address(this));\\n        require(balance > 0, \\\"No tokens to distribute\\\");\\n\\n        for (uint256 i = 0; i < 3; i++) {\\n            if (recipients[i] != address(0) && percentages[i] > 0) {\\n                uint256 amount = (balance * percentages[i]) / 100;\\n                token.transfer(recipients[i], amount);\\n            }\\n        }\\n        emit Distributed(balance);\\n    }\\n\\n    function withdrawTokens(address _token) external onlyOwner {\\n        require(_token != address(token), \\\"Cannot withdraw primary token\\\");\\n        IERC20 otherToken = IERC20(_token);\\n        uint256 balance = otherToken.balanceOf(address(this));\\n        require(balance > 0, \\\"No tokens to withdraw\\\");\\n        otherToken.transfer(owner(), balance);\\n        emit TokensWithdrawn(_token, balance);\\n    }\\n\\n    function withdrawETH() external onlyOwner {\\n        uint256 balance = address(this).balance;\\n        require(balance > 0, \\\"No ETH to withdraw\\\");\\n        payable(owner()).transfer(balance);\\n        emit ETHWithdrawn(balance);\\n    }\\n}\\n\",\"keccak256\":\"0x2b1dc5b812a3902ce2439ec0a51df5ad3a91c234d4a574a1f578deab2710029f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c9e806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063d1bc76a111610071578063d1bc76a11461011b578063e086e5ec1461012e578063e4fc6b6d14610136578063f2fde38b1461013e578063f885838614610151578063fc0c546a1461017257600080fd5b80630b80c1c0146100ae578063144fa6d7146100c357806349df728c146100d6578063715018a6146100e95780638da5cb5b146100f1575b600080fd5b6100c16100bc366004610a58565b610185565b005b6100c16100d1366004610b0f565b6102b8565b6100c16100e4366004610b0f565b610363565b6100c1610552565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100fe610129366004610b31565b610566565b6100c1610586565b6100c161063b565b6100c161014c366004610b0f565b610898565b61016461015f366004610b31565b6108d6565b604051908152602001610112565b6007546100fe906001600160a01b031681565b61018d6108ed565b81516001600160a01b03166101e95760405162461bcd60e51b815260206004820152601f60248201527f4174206c65617374206f6e6520726563697069656e742072657175697265640060448201526064015b60405180910390fd5b6040810151602082015182516000929161020291610b76565b61020c9190610b76565b90508060641461025e5760405162461bcd60e51b815260206004820152601b60248201527f50657263656e7461676573206d7573742073756d20746f20313030000000000060448201526064016101e0565b61026b600184600361096a565b5061027960048360036109c2565b507fc417118706db9f9287a0be2231f79cfab22831060c01eb968332b8f8f85e9ebb83836040516102ab929190610b8f565b60405180910390a1505050565b6102c06108ed565b6001600160a01b03811661030e5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b60448201526064016101e0565b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e30906020015b60405180910390a150565b61036b6108ed565b6007546001600160a01b03908116908216036103c95760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74207769746864726177207072696d61727920746f6b656e00000060448201526064016101e0565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610bf4565b9050600081116104805760405162461bcd60e51b81526020600482015260156024820152744e6f20746f6b656e7320746f20776974686472617760581b60448201526064016101e0565b816001600160a01b031663a9059cbb6104a16000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156104ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190610c0d565b50604080516001600160a01b0385168152602081018390527f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b91016102ab565b61055a6108ed565b610564600061091a565b565b6001816003811061057657600080fd5b01546001600160a01b0316905081565b61058e6108ed565b47806105d15760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b60448201526064016101e0565b600080546040516001600160a01b039091169183156108fc02918491818181858888f1935050505015801561060a573d6000803e3d6000fd5b506040518181527f043f607a14d3b4f0a11a0b2e192bbfcd894298ba5abf22553be6081406db28aa90602001610358565b6007546001600160a01b03166106835760405162461bcd60e51b815260206004820152600d60248201526c151bdad95b881b9bdd081cd95d609a1b60448201526064016101e0565b6007546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f09190610bf4565b9050600081116107425760405162461bcd60e51b815260206004820152601760248201527f4e6f20746f6b656e7320746f206469737472696275746500000000000000000060448201526064016101e0565b60005b60038110156108675760006001826003811061076357610763610b4a565b01546001600160a01b031614801590610790575060006004826003811061078c5761078c610b4a565b0154115b1561085f5760006064600483600381106107ac576107ac610b4a565b01546107b89085610c2f565b6107c29190610c46565b6007549091506001600160a01b031663a9059cbb600184600381106107e9576107e9610b4a565b015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085c9190610c0d565b50505b600101610745565b506040518181527fddc9c30275a04c48091f24199f9c405765de34d979d6847f5b9798a57232d2e590602001610358565b6108a06108ed565b6001600160a01b0381166108ca57604051631e4fbdf760e01b8152600060048201526024016101e0565b6108d38161091a565b50565b600481600381106108e657600080fd5b0154905081565b6000546001600160a01b031633146105645760405163118cdaa760e01b81523360048201526024016101e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82600381019282156109b2579160200282015b828111156109b257825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061097d565b506109be9291506109f0565b5090565b82600381019282156109b2579160200282015b828111156109b25782518255916020019190600101906109d5565b5b808211156109be57600081556001016109f1565b6040516060810167ffffffffffffffff81118282101715610a3657634e487b7160e01b600052604160045260246000fd5b60405290565b80356001600160a01b0381168114610a5357600080fd5b919050565b60008060c08385031215610a6b57600080fd5b83601f840112610a7a57600080fd5b610a82610a05565b806060850186811115610a9457600080fd5b855b81811015610ab557610aa781610a3c565b845260209384019301610a96565b5081945086607f870112610ac857600080fd5b610ad0610a05565b925082915060c0860187811115610ae657600080fd5b5b80821015610b02578135845260209384019390910190610ae7565b5093969095509350505050565b600060208284031215610b2157600080fd5b610b2a82610a3c565b9392505050565b600060208284031215610b4357600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610b8957610b89610b60565b92915050565b60c08101818460005b6003811015610bc05781516001600160a01b0316835260209283019290910190600101610b98565b505050606082018360005b6003811015610bea578151835260209283019290910190600101610bcb565b5050509392505050565b600060208284031215610c0657600080fd5b5051919050565b600060208284031215610c1f57600080fd5b81518015158114610b2a57600080fd5b8082028115828204841417610b8957610b89610b60565b600082610c6357634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203ddc5eaf47a78b1564250446f076d3b874e15894d1dce5a83c99096bcc66748664736f6c63430008160033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063d1bc76a111610071578063d1bc76a11461011b578063e086e5ec1461012e578063e4fc6b6d14610136578063f2fde38b1461013e578063f885838614610151578063fc0c546a1461017257600080fd5b80630b80c1c0146100ae578063144fa6d7146100c357806349df728c146100d6578063715018a6146100e95780638da5cb5b146100f1575b600080fd5b6100c16100bc366004610a58565b610185565b005b6100c16100d1366004610b0f565b6102b8565b6100c16100e4366004610b0f565b610363565b6100c1610552565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100fe610129366004610b31565b610566565b6100c1610586565b6100c161063b565b6100c161014c366004610b0f565b610898565b61016461015f366004610b31565b6108d6565b604051908152602001610112565b6007546100fe906001600160a01b031681565b61018d6108ed565b81516001600160a01b03166101e95760405162461bcd60e51b815260206004820152601f60248201527f4174206c65617374206f6e6520726563697069656e742072657175697265640060448201526064015b60405180910390fd5b6040810151602082015182516000929161020291610b76565b61020c9190610b76565b90508060641461025e5760405162461bcd60e51b815260206004820152601b60248201527f50657263656e7461676573206d7573742073756d20746f20313030000000000060448201526064016101e0565b61026b600184600361096a565b5061027960048360036109c2565b507fc417118706db9f9287a0be2231f79cfab22831060c01eb968332b8f8f85e9ebb83836040516102ab929190610b8f565b60405180910390a1505050565b6102c06108ed565b6001600160a01b03811661030e5760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b60448201526064016101e0565b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e30906020015b60405180910390a150565b61036b6108ed565b6007546001600160a01b03908116908216036103c95760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74207769746864726177207072696d61727920746f6b656e00000060448201526064016101e0565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa158015610412573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104369190610bf4565b9050600081116104805760405162461bcd60e51b81526020600482015260156024820152744e6f20746f6b656e7320746f20776974686472617760581b60448201526064016101e0565b816001600160a01b031663a9059cbb6104a16000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156104ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190610c0d565b50604080516001600160a01b0385168152602081018390527f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b91016102ab565b61055a6108ed565b610564600061091a565b565b6001816003811061057657600080fd5b01546001600160a01b0316905081565b61058e6108ed565b47806105d15760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b60448201526064016101e0565b600080546040516001600160a01b039091169183156108fc02918491818181858888f1935050505015801561060a573d6000803e3d6000fd5b506040518181527f043f607a14d3b4f0a11a0b2e192bbfcd894298ba5abf22553be6081406db28aa90602001610358565b6007546001600160a01b03166106835760405162461bcd60e51b815260206004820152600d60248201526c151bdad95b881b9bdd081cd95d609a1b60448201526064016101e0565b6007546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f09190610bf4565b9050600081116107425760405162461bcd60e51b815260206004820152601760248201527f4e6f20746f6b656e7320746f206469737472696275746500000000000000000060448201526064016101e0565b60005b60038110156108675760006001826003811061076357610763610b4a565b01546001600160a01b031614801590610790575060006004826003811061078c5761078c610b4a565b0154115b1561085f5760006064600483600381106107ac576107ac610b4a565b01546107b89085610c2f565b6107c29190610c46565b6007549091506001600160a01b031663a9059cbb600184600381106107e9576107e9610b4a565b015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610838573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085c9190610c0d565b50505b600101610745565b506040518181527fddc9c30275a04c48091f24199f9c405765de34d979d6847f5b9798a57232d2e590602001610358565b6108a06108ed565b6001600160a01b0381166108ca57604051631e4fbdf760e01b8152600060048201526024016101e0565b6108d38161091a565b50565b600481600381106108e657600080fd5b0154905081565b6000546001600160a01b031633146105645760405163118cdaa760e01b81523360048201526024016101e0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82600381019282156109b2579160200282015b828111156109b257825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061097d565b506109be9291506109f0565b5090565b82600381019282156109b2579160200282015b828111156109b25782518255916020019190600101906109d5565b5b808211156109be57600081556001016109f1565b6040516060810167ffffffffffffffff81118282101715610a3657634e487b7160e01b600052604160045260246000fd5b60405290565b80356001600160a01b0381168114610a5357600080fd5b919050565b60008060c08385031215610a6b57600080fd5b83601f840112610a7a57600080fd5b610a82610a05565b806060850186811115610a9457600080fd5b855b81811015610ab557610aa781610a3c565b845260209384019301610a96565b5081945086607f870112610ac857600080fd5b610ad0610a05565b925082915060c0860187811115610ae657600080fd5b5b80821015610b02578135845260209384019390910190610ae7565b5093969095509350505050565b600060208284031215610b2157600080fd5b610b2a82610a3c565b9392505050565b600060208284031215610b4357600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610b8957610b89610b60565b92915050565b60c08101818460005b6003811015610bc05781516001600160a01b0316835260209283019290910190600101610b98565b505050606082018360005b6003811015610bea578151835260209283019290910190600101610bcb565b5050509392505050565b600060208284031215610c0657600080fd5b5051919050565b600060208284031215610c1f57600080fd5b81518015158114610b2a57600080fd5b8082028115828204841417610b8957610b89610b60565b600082610c6357634e487b7160e01b600052601260045260246000fd5b50049056fea26469706673582212203ddc5eaf47a78b1564250446f076d3b874e15894d1dce5a83c99096bcc66748664736f6c63430008160033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3841,
        "contract": "contracts/ERC20Splitter3Way.sol:ERC20Splitter3Way",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5669,
        "contract": "contracts/ERC20Splitter3Way.sol:ERC20Splitter3Way",
        "label": "recipients",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)3_storage"
      },
      {
        "astId": 5673,
        "contract": "contracts/ERC20Splitter3Way.sol:ERC20Splitter3Way",
        "label": "percentages",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)3_storage"
      },
      {
        "astId": 5676,
        "contract": "contracts/ERC20Splitter3Way.sol:ERC20Splitter3Way",
        "label": "token",
        "offset": 0,
        "slot": "7",
        "type": "t_contract(IERC20)4800"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)3_storage": {
        "base": "t_address",
        "encoding": "inplace",
        "label": "address[3]",
        "numberOfBytes": "96"
      },
      "t_array(t_uint256)3_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[3]",
        "numberOfBytes": "96"
      },
      "t_contract(IERC20)4800": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}