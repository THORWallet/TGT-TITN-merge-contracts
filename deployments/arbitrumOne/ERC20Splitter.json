{
  "address": "0x091852fccDA4c62A18a9282F06b084EA2197c28b",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Distributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ETHWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[2]",
          "name": "recipients",
          "type": "address[2]"
        },
        {
          "indexed": false,
          "internalType": "uint256[2]",
          "name": "percentages",
          "type": "uint256[2]"
        }
      ],
      "name": "RecipientsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "TokenUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensWithdrawn",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "distribute",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "percentages",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "recipients",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[2]",
          "name": "_recipients",
          "type": "address[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "_percentages",
          "type": "uint256[2]"
        }
      ],
      "name": "setRecipients",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "setToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdf2c390407a14e8c57e89bca80a8df1e5f373276a753e95e45a854e5c7b6f4e9",
  "receipt": {
    "to": null,
    "from": "0x5166ef11e5dF6D4Ca213778fFf4756937e469663",
    "contractAddress": "0x091852fccDA4c62A18a9282F06b084EA2197c28b",
    "transactionIndex": 4,
    "gasUsed": "788194",
    "logsBloom": "0x
    "blockHash": "0xbd4093f65a122038c0e8453ae81b9a41803070e63fc561b653f9bd5b75a00b37",
    "transactionHash": "0xdf2c390407a14e8c57e89bca80a8df1e5f373276a753e95e45a854e5c7b6f4e9",
    "logs": [
      {
        "transactionIndex": 4,
        "blockNumber": 318028156,
        "transactionHash": "0xdf2c390407a14e8c57e89bca80a8df1e5f373276a753e95e45a854e5c7b6f4e9",
        "address": "0x091852fccDA4c62A18a9282F06b084EA2197c28b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000005166ef11e5df6d4ca213778fff4756937e469663"
        ],
        "data": "0x",
        "logIndex": 43,
        "blockHash": "0xbd4093f65a122038c0e8453ae81b9a41803070e63fc561b653f9bd5b75a00b37"
      }
    ],
    "blockNumber": 318028156,
    "cumulativeGasUsed": "3202059",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "225ed02385f4c5506de14c011d7e9c87",
  "metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Distributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ETHWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[2]\",\"name\":\"recipients\",\"type\":\"address[2]\"},{\"indexed\":false,\"internalType\":\"uint256[2]\",\"name\":\"percentages\",\"type\":\"uint256[2]\"}],\"name\":\"RecipientsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"TokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensWithdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"percentages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recipients\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[2]\",\"name\":\"_recipients\",\"type\":\"address[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"_percentages\",\"type\":\"uint256[2]\"}],\"name\":\"setRecipients\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Splitter.sol\":\"ERC20Splitter\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC-20 standard as defined in the ERC.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/ERC20Splitter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract ERC20Splitter is Ownable {\\n    address[2] public recipients;\\n    uint256[2] public percentages;\\n    IERC20 public token;\\n\\n    event RecipientsUpdated(address[2] recipients, uint256[2] percentages);\\n    event TokenUpdated(address token);\\n    event Distributed(uint256 amount);\\n    event TokensWithdrawn(address token, uint256 amount);\\n    event ETHWithdrawn(uint256 amount);\\n\\n    constructor() Ownable(msg.sender) {}\\n\\n    function setRecipients(address[2] memory _recipients, uint256[2] memory _percentages) external onlyOwner {\\n        require(_recipients[0] != address(0), \\\"At least one recipient required\\\");\\n        uint256 totalPercent = _percentages[0] + _percentages[1];\\n        require(totalPercent == 100, \\\"Percentages must sum to 100\\\");\\n\\n        recipients = _recipients;\\n        percentages = _percentages;\\n        emit RecipientsUpdated(_recipients, _percentages);\\n    }\\n\\n    function setToken(address _token) external onlyOwner {\\n        require(_token != address(0), \\\"Invalid token address\\\");\\n        token = IERC20(_token);\\n        emit TokenUpdated(_token);\\n    }\\n\\n    function distribute() external {\\n        require(address(token) != address(0), \\\"Token not set\\\");\\n        uint256 balance = token.balanceOf(address(this));\\n        require(balance > 0, \\\"No tokens to distribute\\\");\\n\\n        for (uint256 i = 0; i < 2; i++) {\\n            if (recipients[i] != address(0) && percentages[i] > 0) {\\n                uint256 amount = (balance * percentages[i]) / 100;\\n                token.transfer(recipients[i], amount);\\n            }\\n        }\\n        emit Distributed(balance);\\n    }\\n\\n    function withdrawTokens(address _token) external onlyOwner {\\n        require(_token != address(token), \\\"Cannot withdraw primary token\\\");\\n        IERC20 otherToken = IERC20(_token);\\n        uint256 balance = otherToken.balanceOf(address(this));\\n        require(balance > 0, \\\"No tokens to withdraw\\\");\\n        otherToken.transfer(owner(), balance);\\n        emit TokensWithdrawn(_token, balance);\\n    }\\n\\n    function withdrawETH() external onlyOwner {\\n        uint256 balance = address(this).balance;\\n        require(balance > 0, \\\"No ETH to withdraw\\\");\\n        payable(owner()).transfer(balance);\\n        emit ETHWithdrawn(balance);\\n    }\\n}\\n\",\"keccak256\":\"0x439893a09daba7a93b52ea04f540c4a449b2b411ab14b1026d022b3db34ed6d7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50338061003757604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61004081610046565b50610096565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610c8a806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063d1bc76a111610071578063d1bc76a11461011b578063e086e5ec1461012e578063e4fc6b6d14610136578063f2fde38b1461013e578063f885838614610151578063fc0c546a1461017257600080fd5b8063144fa6d7146100ae57806349df728c146100c3578063715018a6146100d65780638da5cb5b146100de5780638fc97a1a14610108575b600080fd5b6100c16100bc366004610a0d565b610185565b005b6100c16100d1366004610a0d565b610235565b6100c161042d565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c1610116366004610a66565b610441565b6100eb610129366004610b1d565b610552565b6100c1610572565b6100c1610627565b6100c161014c366004610a0d565b610884565b61016461015f366004610b1d565b6108c2565b6040519081526020016100ff565b6005546100eb906001600160a01b031681565b61018d6108d9565b6001600160a01b0381166101e05760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b60448201526064015b60405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e30906020015b60405180910390a150565b61023d6108d9565b6005546001600160a01b039081169082160361029b5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74207769746864726177207072696d61727920746f6b656e00000060448201526064016101d7565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610b36565b9050600081116103525760405162461bcd60e51b81526020600482015260156024820152744e6f20746f6b656e7320746f20776974686472617760581b60448201526064016101d7565b816001600160a01b031663a9059cbb6103736000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190610b4f565b50604080516001600160a01b0385168152602081018390527f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b91015b60405180910390a1505050565b6104356108d9565b61043f6000610906565b565b6104496108d9565b81516001600160a01b03166104a05760405162461bcd60e51b815260206004820152601f60248201527f4174206c65617374206f6e6520726563697069656e742072657175697265640060448201526064016101d7565b602081015181516000916104b391610b9d565b9050806064146105055760405162461bcd60e51b815260206004820152601b60248201527f50657263656e7461676573206d7573742073756d20746f20313030000000000060448201526064016101d7565b6105126001846002610956565b5061052060038360026109ae565b507fa1a735e67f131cfe488d8beeca418eaccf282bb4b0165b389bf983e80694242b8383604051610420929190610bb6565b6001816002811061056257600080fd5b01546001600160a01b0316905081565b61057a6108d9565b47806105bd5760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b60448201526064016101d7565b600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156105f6573d6000803e3d6000fd5b506040518181527f043f607a14d3b4f0a11a0b2e192bbfcd894298ba5abf22553be6081406db28aa9060200161022a565b6005546001600160a01b031661066f5760405162461bcd60e51b815260206004820152600d60248201526c151bdad95b881b9bdd081cd95d609a1b60448201526064016101d7565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610b36565b90506000811161072e5760405162461bcd60e51b815260206004820152601760248201527f4e6f20746f6b656e7320746f206469737472696275746500000000000000000060448201526064016101d7565b60005b60028110156108535760006001826002811061074f5761074f610b71565b01546001600160a01b03161480159061077c575060006003826002811061077857610778610b71565b0154115b1561084b57600060646003836002811061079857610798610b71565b01546107a49085610c1b565b6107ae9190610c32565b6005549091506001600160a01b031663a9059cbb600184600281106107d5576107d5610b71565b015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108489190610b4f565b50505b600101610731565b506040518181527fddc9c30275a04c48091f24199f9c405765de34d979d6847f5b9798a57232d2e59060200161022a565b61088c6108d9565b6001600160a01b0381166108b657604051631e4fbdf760e01b8152600060048201526024016101d7565b6108bf81610906565b50565b600381600281106108d257600080fd5b0154905081565b6000546001600160a01b0316331461043f5760405163118cdaa760e01b81523360048201526024016101d7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b826002810192821561099e579160200282015b8281111561099e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610969565b506109aa9291506109dc565b5090565b826002810192821561099e579160200282015b8281111561099e5782518255916020019190600101906109c1565b5b808211156109aa57600081556001016109dd565b80356001600160a01b0381168114610a0857600080fd5b919050565b600060208284031215610a1f57600080fd5b610a28826109f1565b9392505050565b6040805190810167ffffffffffffffff81118282101715610a6057634e487b7160e01b600052604160045260246000fd5b60405290565b60008060808385031215610a7957600080fd5b83601f840112610a8857600080fd5b610a90610a2f565b806040850186811115610aa257600080fd5b855b81811015610ac357610ab5816109f1565b845260209384019301610aa4565b5081945086605f870112610ad657600080fd5b610ade610a2f565b92508291506080860187811115610af457600080fd5b5b80821015610b10578135845260209384019390910190610af5565b5093969095509350505050565b600060208284031215610b2f57600080fd5b5035919050565b600060208284031215610b4857600080fd5b5051919050565b600060208284031215610b6157600080fd5b81518015158114610a2857600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610bb057610bb0610b87565b92915050565b60808101818460005b6002811015610be75781516001600160a01b0316835260209283019290910190600101610bbf565b505050604082018360005b6002811015610c11578151835260209283019290910190600101610bf2565b5050509392505050565b8082028115828204841417610bb057610bb0610b87565b600082610c4f57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a7e631ea1c96980fd8efe221c191ff1700c7952081d70e2a244c6b2a759e090464736f6c63430008160033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063d1bc76a111610071578063d1bc76a11461011b578063e086e5ec1461012e578063e4fc6b6d14610136578063f2fde38b1461013e578063f885838614610151578063fc0c546a1461017257600080fd5b8063144fa6d7146100ae57806349df728c146100c3578063715018a6146100d65780638da5cb5b146100de5780638fc97a1a14610108575b600080fd5b6100c16100bc366004610a0d565b610185565b005b6100c16100d1366004610a0d565b610235565b6100c161042d565b6000546001600160a01b03165b6040516001600160a01b0390911681526020015b60405180910390f35b6100c1610116366004610a66565b610441565b6100eb610129366004610b1d565b610552565b6100c1610572565b6100c1610627565b6100c161014c366004610a0d565b610884565b61016461015f366004610b1d565b6108c2565b6040519081526020016100ff565b6005546100eb906001600160a01b031681565b61018d6108d9565b6001600160a01b0381166101e05760405162461bcd60e51b8152602060048201526015602482015274496e76616c696420746f6b656e206164647265737360581b60448201526064015b60405180910390fd5b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527f5ba6b30cd4b2f9e9e67f4feb9b9df10d5da3b057598e6901b217b7d590345e30906020015b60405180910390a150565b61023d6108d9565b6005546001600160a01b039081169082160361029b5760405162461bcd60e51b815260206004820152601d60248201527f43616e6e6f74207769746864726177207072696d61727920746f6b656e00000060448201526064016101d7565b6040516370a0823160e01b815230600482015281906000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156102e4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103089190610b36565b9050600081116103525760405162461bcd60e51b81526020600482015260156024820152744e6f20746f6b656e7320746f20776974686472617760581b60448201526064016101d7565b816001600160a01b031663a9059cbb6103736000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af11580156103c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e49190610b4f565b50604080516001600160a01b0385168152602081018390527f6352c5382c4a4578e712449ca65e83cdb392d045dfcf1cad9615189db2da244b91015b60405180910390a1505050565b6104356108d9565b61043f6000610906565b565b6104496108d9565b81516001600160a01b03166104a05760405162461bcd60e51b815260206004820152601f60248201527f4174206c65617374206f6e6520726563697069656e742072657175697265640060448201526064016101d7565b602081015181516000916104b391610b9d565b9050806064146105055760405162461bcd60e51b815260206004820152601b60248201527f50657263656e7461676573206d7573742073756d20746f20313030000000000060448201526064016101d7565b6105126001846002610956565b5061052060038360026109ae565b507fa1a735e67f131cfe488d8beeca418eaccf282bb4b0165b389bf983e80694242b8383604051610420929190610bb6565b6001816002811061056257600080fd5b01546001600160a01b0316905081565b61057a6108d9565b47806105bd5760405162461bcd60e51b81526020600482015260126024820152714e6f2045544820746f20776974686472617760701b60448201526064016101d7565b600080546040516001600160a01b039091169183156108fc02918491818181858888f193505050501580156105f6573d6000803e3d6000fd5b506040518181527f043f607a14d3b4f0a11a0b2e192bbfcd894298ba5abf22553be6081406db28aa9060200161022a565b6005546001600160a01b031661066f5760405162461bcd60e51b815260206004820152600d60248201526c151bdad95b881b9bdd081cd95d609a1b60448201526064016101d7565b6005546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156106b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106dc9190610b36565b90506000811161072e5760405162461bcd60e51b815260206004820152601760248201527f4e6f20746f6b656e7320746f206469737472696275746500000000000000000060448201526064016101d7565b60005b60028110156108535760006001826002811061074f5761074f610b71565b01546001600160a01b03161480159061077c575060006003826002811061077857610778610b71565b0154115b1561084b57600060646003836002811061079857610798610b71565b01546107a49085610c1b565b6107ae9190610c32565b6005549091506001600160a01b031663a9059cbb600184600281106107d5576107d5610b71565b015460405160e083901b6001600160e01b03191681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015610824573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108489190610b4f565b50505b600101610731565b506040518181527fddc9c30275a04c48091f24199f9c405765de34d979d6847f5b9798a57232d2e59060200161022a565b61088c6108d9565b6001600160a01b0381166108b657604051631e4fbdf760e01b8152600060048201526024016101d7565b6108bf81610906565b50565b600381600281106108d257600080fd5b0154905081565b6000546001600160a01b0316331461043f5760405163118cdaa760e01b81523360048201526024016101d7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b826002810192821561099e579160200282015b8281111561099e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610969565b506109aa9291506109dc565b5090565b826002810192821561099e579160200282015b8281111561099e5782518255916020019190600101906109c1565b5b808211156109aa57600081556001016109dd565b80356001600160a01b0381168114610a0857600080fd5b919050565b600060208284031215610a1f57600080fd5b610a28826109f1565b9392505050565b6040805190810167ffffffffffffffff81118282101715610a6057634e487b7160e01b600052604160045260246000fd5b60405290565b60008060808385031215610a7957600080fd5b83601f840112610a8857600080fd5b610a90610a2f565b806040850186811115610aa257600080fd5b855b81811015610ac357610ab5816109f1565b845260209384019301610aa4565b5081945086605f870112610ad657600080fd5b610ade610a2f565b92508291506080860187811115610af457600080fd5b5b80821015610b10578135845260209384019390910190610af5565b5093969095509350505050565b600060208284031215610b2f57600080fd5b5035919050565b600060208284031215610b4857600080fd5b5051919050565b600060208284031215610b6157600080fd5b81518015158114610a2857600080fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b80820180821115610bb057610bb0610b87565b92915050565b60808101818460005b6002811015610be75781516001600160a01b0316835260209283019290910190600101610bbf565b505050604082018360005b6002811015610c11578151835260209283019290910190600101610bf2565b5050509392505050565b8082028115828204841417610bb057610bb0610b87565b600082610c4f57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220a7e631ea1c96980fd8efe221c191ff1700c7952081d70e2a244c6b2a759e090464736f6c63430008160033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3841,
        "contract": "contracts/ERC20Splitter.sol:ERC20Splitter",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 5287,
        "contract": "contracts/ERC20Splitter.sol:ERC20Splitter",
        "label": "recipients",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)2_storage"
      },
      {
        "astId": 5291,
        "contract": "contracts/ERC20Splitter.sol:ERC20Splitter",
        "label": "percentages",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)2_storage"
      },
      {
        "astId": 5294,
        "contract": "contracts/ERC20Splitter.sol:ERC20Splitter",
        "label": "token",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(IERC20)4800"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)2_storage": {
        "base": "t_address",
        "encoding": "inplace",
        "label": "address[2]",
        "numberOfBytes": "64"
      },
      "t_array(t_uint256)2_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[2]",
        "numberOfBytes": "64"
      },
      "t_contract(IERC20)4800": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}